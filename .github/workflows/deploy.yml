name: Deploy to GitHub Pages and cPanel

on:
  push:
    branches: [ master ]

permissions:
  contents: write  # For GitHub Pages deployment
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create .htaccess file
        run: |
          cat << EOF > .htaccess
          # Force HTTPS
          RewriteEngine On
          RewriteCond %{HTTPS} off
          RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

          # Set correct MIME types for Angular files
          <IfModule mod_mime.c>
            AddType application/javascript .js
            AddType application/javascript .mjs
            AddType text/css .css
            AddType image/svg+xml .svg
            AddType image/png .png
            AddType image/jpeg .jpg .jpeg
            AddType image/gif .gif
            AddType application/font-woff .woff
            AddType application/font-woff2 .woff2
            AddType application/vnd.ms-fontobject .eot
            AddType application/x-font-ttf .ttf
          </IfModule>

          # Enable CORS
          <IfModule mod_headers.c>
            Header set Access-Control-Allow-Origin "*"
            Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
            Header set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept"
          </IfModule>

          # First check if the requested file exists in the root
          RewriteCond %{REQUEST_FILENAME} -f [OR]
          RewriteCond %{REQUEST_FILENAME} -d
          RewriteRule ^ - [L]

          # If the request is for an asset, check if it exists in browser directory
          RewriteCond %{REQUEST_URI} \.(js|mjs|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$
          RewriteCond %{DOCUMENT_ROOT}/browser%{REQUEST_URI} -f
          RewriteRule ^(.*)$ browser/$1 [L]

          # Otherwise send all non-file requests to browser/index.html
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule ^ browser/index.html [L]

          # Cache control
          <IfModule mod_expires.c>
            ExpiresActive On
            ExpiresByType image/jpeg "access plus 1 year"
            ExpiresByType image/gif "access plus 1 year"
            ExpiresByType image/png "access plus 1 year"
            ExpiresByType image/webp "access plus 1 year"
            ExpiresByType image/svg+xml "access plus 1 year"
            ExpiresByType text/css "access plus 1 month"
            ExpiresByType application/javascript "access plus 1 month"
          </IfModule>
          EOF
        
      - name: Build for GitHub Pages
        run: npm run build:github
        
      - name: Prepare GitHub Pages deployment
        run: |
          mkdir -p gh-pages-build
          cp -r dist/demo2/* gh-pages-build/
          cp .htaccess gh-pages-build/
      
      - name: Build for Custom Domain
        run: npm run build:custom
        
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: gh-pages-build
          
      - name: Add .htaccess to dist folder
        run: cp .htaccess ./dist/demo2/
          
      - name: FTP Deploy to cPanel
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: threadinghouse.com
          username: ijaj0w32271i
          password: Nirmit25#06
          local-dir: ./dist/demo2/
          server-dir: /public_html/
          dangerous-clean-slate: true
          protocol: ftp
          port: 21
          log-level: verbose
          include: |
            **
            .htaccess
            3rdpartylicenses.txt
            prerendered-routes.json